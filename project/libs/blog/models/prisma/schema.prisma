generator client {
  provider = "prisma-client-js"
  output = "../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id              String    @id @default(uuid())
  title           String?
  text            String?
  announcement    String?
  description     String?
  quoteText       String?
  quoteAuthor     String?
  linkPath        String?
  userId          String     @map("user_id")
  isReposted      Boolean    @default(false) @map("is_reposted")
  repostedUserId  String?    @map("reposted_user_id")
  repostedPostId  String?    @map("reposted_post_id")
  likeCount       Int        @default(0) @map("like_count")
  commentCount    Int        @default(0) @map("comment_count")
  createdAt       DateTime   @default(now()) @map("created_at")
  updatedAt       DateTime   @updatedAt @map("updated_at")
  state           String?
  type            String?
  comments        Comment[]
  favorites       Favorite[]
  tags            Tag[]

  @@map("posts")
}

model Comment {
  id          String    @id @default(uuid())
  message     String
  userId      String    @map("user_id")
  post        Post      @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId      String    @map("post_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@index([postId])
  @@map("comments")
}

model Favorite {
  id          String    @id @default(uuid())
  post        Post      @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId      String    @map("post_id")
  userId      String    @map("user_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("favorites")
}

model Tag {
  id       String @id @default(uuid())
  title    String @unique
  posts    Post[]

  @@index([title])
  @@map("tags")
}
